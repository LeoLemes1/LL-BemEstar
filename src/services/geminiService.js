// Simple AI service using mock responses and optional real AI
const API_KEY = import.meta.env.VITE_OPENAI_API_KEY || '';

// Mock AI responses for when no API key is provided
const mockResponses = {
  nutritionPlan: {
    pt: `Com base nos seus dados, aqui est√° seu plano nutricional personalizado:

**Calorias Di√°rias Recomendadas: 2.000 kcal**

**Distribui√ß√£o de Macronutrientes:**
‚Ä¢ Prote√≠nas: 150g (30% - 600 kcal)
‚Ä¢ Carboidratos: 200g (40% - 800 kcal)  
‚Ä¢ Gorduras: 67g (30% - 600 kcal)

**Recomenda√ß√µes Espec√≠ficas:**
‚Ä¢ Consuma 5-6 refei√ß√µes por dia para manter o metabolismo ativo
‚Ä¢ Priorize prote√≠nas magras (frango, peixe, ovos) em todas as refei√ß√µes
‚Ä¢ Inclua gorduras saud√°veis (abacate, azeite, castanhas) moderadamente
‚Ä¢ Hidrate-se com 2-3L de √°gua por dia
‚Ä¢ Evite alimentos processados e a√ß√∫cares refinados

**Dicas Importantes:**
‚Ä¢ Fa√ßa refei√ß√µes a cada 3-4 horas
‚Ä¢ Mastigue devagar para melhor digest√£o
‚Ä¢ Consuma fibras para saciedade (aveia, quinoa, vegetais)
‚Ä¢ Suplemente com vitamina D se necess√°rio

Este plano foi elaborado considerando seu objetivo de perda de peso saud√°vel e sustent√°vel.`,
    en: `Based on your data, here's your personalized nutrition plan:

**Daily Calories Recommended: 2,000 kcal**

**Macronutrient Distribution:**
‚Ä¢ Proteins: 150g (30% - 600 kcal)
‚Ä¢ Carbohydrates: 200g (40% - 800 kcal)
‚Ä¢ Fats: 67g (30% - 600 kcal)

**Specific Recommendations:**
‚Ä¢ Eat 5-6 meals per day to keep metabolism active
‚Ä¢ Prioritize lean proteins (chicken, fish, eggs) in all meals
‚Ä¢ Include healthy fats (avocado, olive oil, nuts) moderately
‚Ä¢ Hydrate with 2-3L of water per day
‚Ä¢ Avoid processed foods and refined sugars

**Important Tips:**
‚Ä¢ Eat every 3-4 hours
‚Ä¢ Chew slowly for better digestion
‚Ä¢ Consume fiber for satiety (oats, quinoa, vegetables)
‚Ä¢ Supplement with vitamin D if necessary

This plan was designed considering your healthy and sustainable weight loss goal.`
  },
  motivationalTips: [
    "Lembre-se: cada pequena escolha saud√°vel √© um passo em dire√ß√£o ao seu objetivo! üí™",
    "A consist√™ncia supera a perfei√ß√£o. Continue focado! üåü",
    "Seu corpo √© seu templo. Alimente-o com amor! üßò‚Äç‚ôÄÔ∏è",
    "Cada dia √© uma nova oportunidade de ser a melhor vers√£o de si mesmo! ‚ú®",
    "O progresso n√£o √© linear. Celebre as pequenas vit√≥rias! üìà"
  ],
  workoutAdvice: {
    pt: `**Dicas para seu Treino em Casa:**

‚Ä¢ **Aquecimento:** Sempre comece com 5-10 minutos de movimento din√¢mico
‚Ä¢ **T√©cnica:** Foque na execu√ß√£o correta antes de aumentar a intensidade
‚Ä¢ **Progress√£o:** Aumente gradualmente as repeti√ß√µes ou tempo
‚Ä¢ **Descanso:** Respeite os intervalos para melhor recupera√ß√£o
‚Ä¢ **Hidrata√ß√£o:** Beba √°gua antes, durante e ap√≥s o treino
‚Ä¢ **Consist√™ncia:** 3-4x por semana √© melhor que treinos espor√°dicos intensos

**Lembre-se:** O melhor treino √© aquele que voc√™ consegue fazer regularmente!`,
    en: `**Tips for Your Home Workout:**

‚Ä¢ **Warm-up:** Always start with 5-10 minutes of dynamic movement
‚Ä¢ **Technique:** Focus on correct execution before increasing intensity
‚Ä¢ **Progression:** Gradually increase repetitions or time
‚Ä¢ **Rest:** Respect intervals for better recovery
‚Ä¢ **Hydration:** Drink water before, during and after training
‚Ä¢ **Consistency:** 3-4x per week is better than sporadic intense workouts

**Remember:** The best workout is the one you can do regularly!`
  }
};

export const generateNutritionPlan = async (userData, language = 'pt') => {
  try {
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    // Return mock response with personalized data
    const baseResponse = mockResponses.nutritionPlan[language];
    const personalizedResponse = baseResponse.replace('2.000 kcal', `${Math.round(userData.weight * 25)} kcal`);
    
    return personalizedResponse;
  } catch (error) {
    console.error('Error generating nutrition plan:', error);
    return language === 'pt' 
      ? "Desculpe, n√£o foi poss√≠vel gerar o plano no momento. Tente novamente mais tarde."
      : "Sorry, couldn't generate the plan at the moment. Please try again later.";
  }
};

export const generateMotivationalTip = async (language = 'pt') => {
  try {
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // Return random mock tip
    const tips = mockResponses.motivationalTips;
    return tips[Math.floor(Math.random() * tips.length)];
  } catch (error) {
    console.error('Error generating motivational tip:', error);
    return language === 'pt'
      ? "Lembre-se: cada pequena escolha saud√°vel √© um passo em dire√ß√£o ao seu objetivo! üí™"
      : "Remember: every small healthy choice is a step towards your goal! üí™";
  }
};

export const generateWorkoutAdvice = async (userData, language = 'pt') => {
  try {
    // Simulate API delay
    await new Promise(resolve => setTimeout(resolve, 1200));
    
    // Return mock workout advice
    return mockResponses.workoutAdvice[language];
  } catch (error) {
    console.error('Error generating workout advice:', error);
    return language === 'pt'
      ? "Dicas de treino: Sempre aque√ßa antes, mantenha boa postura, progresse gradualmente e hidrate-se bem!"
      : "Workout tips: Always warm up first, maintain good posture, progress gradually and stay hydrated!";
  }
};
